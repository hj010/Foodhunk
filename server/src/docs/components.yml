components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user

    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: number
        type:
          type: string
          enum: [veg, nonveg]
        image_url:
          type: string
        image_thumb_url:
          type: string
        ratings:
          type: object
          properties: 
            1:
              type: number
            2:
              type: number
            3:
              type: number
            4:
              type: number
            5:
              type: number
        avgRating: 
          type: number
        reviews: 
          type: number
      example:
        id: 5ebac534954b54139806c112
        name: fake name
        description: fake description
        price: 129
        stock: 10
        type: veg
        image_url: https://image_url.com/image
        image_thumb_url: https://image_thumb_url.com/image
        ratings:
          1: 1
          2: 3
          3: 7
          4: 1
          5: 10
        avgRating: 4
        reviews: 22

    Review:
      type: object
      properties:
        id: 
          type: string
        user:
          type: string
        product:
          type: string
        rating:
          type: string
        review:
          type: number
        approved:
          type: boolean
      example:
        id: 5ebac534954b54139806c112
        user: 6ebac534954b54139806c112
        product: 4ebac534954b54139806c112
        rating: 4
        review: fake review
        approved: false

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
